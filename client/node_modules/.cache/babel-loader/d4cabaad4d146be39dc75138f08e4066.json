{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from 'react';\nimport { Context } from './index';\nimport LoginForm from './components/LoginForm';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    store\n  } = useContext(Context);\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      store.checkAuth();\n    }\n  }, []);\n\n  if (store.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!store.isAuth) {\n    return /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: store.isAuth ? `User is authorized ${store.user.email}` : 'Please Log In or Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => store.logout(),\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"iNyjXxJQPxhFHZ0QvxkLP6AbkAo=\");\n\n_c = App;\nexport default _c2 = observer(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/App.tsx"],"names":["React","useEffect","useContext","Context","LoginForm","observer","App","store","localStorage","getItem","checkAuth","isLoading","isAuth","user","email","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,SAAnB,EAA8BC,UAA9B,QAA+C,OAA/C;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;;;AAEA,MAAMC,GAAM,GAAG,MAAM;AAAA;;AAEnB,QAAM;AAACC,IAAAA;AAAD,MAAUL,UAAU,CAACC,OAAD,CAA1B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjCF,MAAAA,KAAK,CAACG,SAAN;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIH,KAAK,CAACI,SAAV,EAAqB;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACJ,KAAK,CAACK,MAAX,EAAmB;AACjB,wBACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,gBAAKL,KAAK,CAACK,MAAN,GAAgB,sBAAqBL,KAAK,CAACM,IAAN,CAAWC,KAAM,EAAtD,GAA0D;AAA/D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMP,KAAK,CAACQ,MAAN,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxBD;;GAAMT,G;;KAAAA,G;AA0BN,qBAAeD,QAAQ,CAACC,GAAD,CAAvB","sourcesContent":["import React, {FC, useEffect, useContext} from 'react';\nimport { Context } from './index';\nimport LoginForm from './components/LoginForm';\nimport {observer} from 'mobx-react-lite';\n\nconst App:FC = () => {\n\n  const {store} = useContext(Context)\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      store.checkAuth()\n    }\n  }, [])\n\n  if (store.isLoading) {\n    return <div>Loading...</div>\n  }\n\n  if (!store.isAuth) {\n    return (\n      <LoginForm />\n    )\n  }\n  return (\n    <div className=\"App\">\n      <h1>{store.isAuth ? `User is authorized ${store.user.email}` : 'Please Log In or Sign Up'}</h1>\n      <button onClick={() => store.logout()}>Log Out</button>\n    </div>\n  );\n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}