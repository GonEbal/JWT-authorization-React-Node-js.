{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport LoginForm from \"./components/LoginForm\";\nimport { Context } from \"./index\";\nimport { observer } from \"mobx-react-lite\";\nimport UserService from \"./services/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    store\n  } = useContext(Context);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      store.checkAuth();\n    }\n  }, []);\n\n  async function getUsers() {\n    try {\n      const response = await UserService.fetchUsers();\n      setUsers(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  if (store.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!store.isAuth) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getUsers,\n        children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: store.isAuth ? `Пользователь авторизован ${store.user.email}` : 'АВТОРИЗУЙТЕСЬ'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: store.user.isActivated ? 'Аккаунт подтвержден по почте' : 'ПОДТВЕРДИТЕ АККАУНТ!!!!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => store.logout(),\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getUsers,\n        children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user.email\n    }, user.email, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"tfiaStP1n11BNY4mNXglrA1kUrU=\");\n\n_c = App;\nexport default _c2 = observer(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/App.tsx"],"names":["React","useContext","useEffect","useState","LoginForm","Context","observer","UserService","App","store","users","setUsers","localStorage","getItem","checkAuth","getUsers","response","fetchUsers","data","e","console","log","isLoading","isAuth","user","email","isActivated","logout","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,UAAnB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAAyD,OAAzD;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,OAAR,QAAsB,SAAtB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,MAAMC,GAAO,GAAG,MAAM;AAAA;;AAClB,QAAM;AAACC,IAAAA;AAAD,MAAUR,UAAU,CAACI,OAAD,CAA1B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAU,EAAV,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/BJ,MAAAA,KAAK,CAACK,SAAN;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;;AAMA,iBAAeC,QAAf,GAA0B;AACtB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMT,WAAW,CAACU,UAAZ,EAAvB;AACAN,MAAAA,QAAQ,CAACK,QAAQ,CAACE,IAAV,CAAR;AACH,KAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AAED,MAAIV,KAAK,CAACa,SAAV,EAAqB;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACb,KAAK,CAACc,MAAX,EAAmB;AACf,wBACI;AAAA,8BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAER,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAED,sBACI;AAAA,4BACI;AAAA,gBAAKN,KAAK,CAACc,MAAN,GAAgB,4BAA2Bd,KAAK,CAACe,IAAN,CAAWC,KAAM,EAA5D,GAAgE;AAArE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKhB,KAAK,CAACe,IAAN,CAAWE,WAAX,GAAyB,8BAAzB,GAA0D;AAA/D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAMjB,KAAK,CAACkB,MAAN,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEZ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,EAOKL,KAAK,CAACkB,GAAN,CAAUJ,IAAI,iBACX;AAAA,gBAAuBA,IAAI,CAACC;AAA5B,OAAUD,IAAI,CAACC,KAAf;AAAA;AAAA;AAAA;AAAA,YADH,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA7CD;;GAAMjB,G;;KAAAA,G;AA+CN,qBAAeF,QAAQ,CAACE,GAAD,CAAvB","sourcesContent":["import React, {FC, useContext, useEffect, useState} from 'react';\nimport LoginForm from \"./components/LoginForm\";\nimport {Context} from \"./index\";\nimport {observer} from \"mobx-react-lite\";\nimport {IUser} from \"./models/IUser\";\nimport UserService from \"./services/UserService\";\n\nconst App: FC = () => {\n    const {store} = useContext(Context);\n    const [users, setUsers] = useState<IUser[]>([]);\n\n    useEffect(() => {\n        if (localStorage.getItem('token')) {\n            store.checkAuth()\n        }\n    }, [])\n\n    async function getUsers() {\n        try {\n            const response = await UserService.fetchUsers();\n            setUsers(response.data);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    if (store.isLoading) {\n        return <div>Загрузка...</div>\n    }\n\n    if (!store.isAuth) {\n        return (\n            <div>\n                <LoginForm/>\n                <button onClick={getUsers}>Получить пользователей</button>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <h1>{store.isAuth ? `Пользователь авторизован ${store.user.email}` : 'АВТОРИЗУЙТЕСЬ'}</h1>\n            <h1>{store.user.isActivated ? 'Аккаунт подтвержден по почте' : 'ПОДТВЕРДИТЕ АККАУНТ!!!!'}</h1>\n            <button onClick={() => store.logout()}>Выйти</button>\n            <div>\n                <button onClick={getUsers}>Получить пользователей</button>\n            </div>\n            {users.map(user =>\n                <div key={user.email}>{user.email}</div>\n            )}\n        </div>\n    );\n};\n\nexport default observer(App);"]},"metadata":{},"sourceType":"module"}