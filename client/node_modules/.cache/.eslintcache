[{"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/index.tsx":"1","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/store/store.ts":"2","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/App.tsx":"3","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/services/AuthService.ts":"4","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/components/LoginForm.tsx":"5","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/http/index.ts":"6","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/services/UserService.ts":"7"},{"size":389,"mtime":1624829437861,"results":"8","hashOfConfig":"9"},{"size":2245,"mtime":1624831858847,"results":"10","hashOfConfig":"9"},{"size":1312,"mtime":1624840485444,"results":"11","hashOfConfig":"9"},{"size":608,"mtime":1624831887000,"results":"12","hashOfConfig":"9"},{"size":1088,"mtime":1624840542656,"results":"13","hashOfConfig":"9"},{"size":977,"mtime":1624840877677,"results":"14","hashOfConfig":"9"},{"size":313,"mtime":1624831892780,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"mzi44g",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/index.tsx",[],["32","33"],"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/store/store.ts",["34"],"import {IUser} from \"../models/IUser\";\nimport {makeAutoObservable} from \"mobx\";\nimport AuthService from \"../services/AuthService\";\nimport axios from 'axios';\nimport {AuthResponse} from \"../models/response/AuthResponse\";\nimport {API_URL} from \"../http\";\n\nexport default class Store {\n    user = {} as IUser;\n    isAuth = false;\n    isLoading = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool: boolean) {\n        this.isAuth = bool;\n    }\n\n    setUser(user: IUser) {\n        this.user = user;\n    }\n\n    setLoading(bool: boolean) {\n        this.isLoading = bool;\n    }\n\n    async login(email: string, password: string) {\n        try {\n            const response = await AuthService.login(email, password);\n            console.log(response)\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async registration(email: string, password: string) {\n        try {\n            const response = await AuthService.registration(email, password);\n            console.log(response)\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async logout() {\n        try {\n            const response = await AuthService.logout();\n            localStorage.removeItem('token');\n            this.setAuth(false);\n            this.setUser({} as IUser);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\n            console.log(response);\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        } finally {\n            this.setLoading(false);\n        }\n    }\n}\n","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/App.tsx",["35"],"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/services/AuthService.ts",[],"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/components/LoginForm.tsx",[],"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/http/index.ts",["36"],"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/services/UserService.ts",["37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":55,"column":19,"nodeType":"44","messageId":"45","endLine":55,"endColumn":27},{"ruleId":"46","severity":1,"message":"47","line":16,"column":6,"nodeType":"48","endLine":16,"endColumn":8,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":21,"column":31,"nodeType":"52","messageId":"53","endLine":21,"endColumn":33},{"ruleId":"42","severity":1,"message":"54","line":3,"column":9,"nodeType":"44","messageId":"45","endLine":3,"endColumn":21},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'AuthResponse' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [store]",{"range":"60","text":"61"},[497,499],"[store]"]