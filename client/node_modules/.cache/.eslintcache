[{"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/index.tsx":"1","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/store/store.ts":"2","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/App.tsx":"3","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/services/AuthService.ts":"4","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/components/LoginForm.tsx":"5","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/http/index.ts":"6"},{"size":389,"mtime":1624829437861,"results":"7","hashOfConfig":"8"},{"size":2245,"mtime":1624831858847,"results":"9","hashOfConfig":"8"},{"size":552,"mtime":1624838476278,"results":"10","hashOfConfig":"8"},{"size":608,"mtime":1624831887000,"results":"11","hashOfConfig":"8"},{"size":1084,"mtime":1624838528932,"results":"12","hashOfConfig":"8"},{"size":358,"mtime":1624831956681,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"mzi44g",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/index.tsx",[],["30","31"],"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/store/store.ts",["32"],"import {IUser} from \"../models/IUser\";\nimport {makeAutoObservable} from \"mobx\";\nimport AuthService from \"../services/AuthService\";\nimport axios from 'axios';\nimport {AuthResponse} from \"../models/response/AuthResponse\";\nimport {API_URL} from \"../http\";\n\nexport default class Store {\n    user = {} as IUser;\n    isAuth = false;\n    isLoading = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool: boolean) {\n        this.isAuth = bool;\n    }\n\n    setUser(user: IUser) {\n        this.user = user;\n    }\n\n    setLoading(bool: boolean) {\n        this.isLoading = bool;\n    }\n\n    async login(email: string, password: string) {\n        try {\n            const response = await AuthService.login(email, password);\n            console.log(response)\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async registration(email: string, password: string) {\n        try {\n            const response = await AuthService.registration(email, password);\n            console.log(response)\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async logout() {\n        try {\n            const response = await AuthService.logout();\n            localStorage.removeItem('token');\n            this.setAuth(false);\n            this.setUser({} as IUser);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        }\n    }\n\n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\n            console.log(response);\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            console.log(e.response?.data?.message);\n        } finally {\n            this.setLoading(false);\n        }\n    }\n}\n","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/App.tsx",["33"],"import React, {FC, useEffect, useContext} from 'react';\nimport { Context } from './index';\nimport LoginForm from './components/LoginForm';\nimport {observer} from 'mobx-react-lite';\n\nconst App:FC = () => {\n\n  const {store} = useContext(Context)\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      store.checkAuth()\n    }\n  }, [])\n  return (\n    <div className=\"App\">\n      <h1>{store.isAuth ? `User is authorized ${store.user.email}` : 'Please Log In or Sign Up'}</h1>\n      <LoginForm />\n    </div>\n  );\n}\n\nexport default observer(App);\n","/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/services/AuthService.ts",[],"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/components/LoginForm.tsx",[],"/Users/denis/Documents/JWT-authorization-React-Node-js./client/src/http/index.ts",["34"],"import axios from 'axios';\nimport { config } from 'process';\n\nexport const API_URL = `http://localhost:5000/api`\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n})\n\n$api.interceptors.request.use((config) => {\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n    return config;\n})\n\nexport default $api;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":55,"column":19,"nodeType":"41","messageId":"42","endLine":55,"endColumn":27},{"ruleId":"43","severity":1,"message":"44","line":13,"column":6,"nodeType":"45","endLine":13,"endColumn":8,"suggestions":"46"},{"ruleId":"39","severity":1,"message":"47","line":2,"column":10,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["50"],"'config' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [store]",{"range":"53","text":"54"},[340,342],"[store]"]